(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{266:function(e){e.exports={data:{post:{title:"Arch Linux Install",path:"/arch-linux-install",date:"9. April 2019",timeToRead:3,tags:[{id:"Arch Linux",title:"Arch Linux",path:"/tag/arch-linux"},{id:"Linux",title:"Linux",path:"/tag/linux"}],description:"Guide on how to install Arch Linux.",content:'<h1 id="arch-linux-install"><a href="#arch-linux-install" aria-hidden="true"><span class="icon icon-link"></span></a>Arch Linux Install</h1>\n<h2 id="warning"><a href="#warning" aria-hidden="true"><span class="icon icon-link"></span></a>Warning</h2>\n<p>Copy and pasted from various sources. Use at your own risk etc.</p>\n<h2 id="prepare-the-hard-disk"><a href="#prepare-the-hard-disk" aria-hidden="true"><span class="icon icon-link"></span></a>Prepare the Hard disk</h2>\n<p>Boot <code class="language-text">gparted</code> from an usb-stick and configure your disk as follows:</p>\n<ol>\n<li>Set your partition table to MBR</li>\n<li>Create the fist partition (later used as <code class="language-text">/boot</code>): 200 MB, set the bootable flag, filesystem: ext3</li>\n<li>Create the second partition (later used with LVM, containing <code class="language-text">/</code>, <code class="language-text">/swap</code> and <code class="language-text">/home</code>): use the remaining space, leave it unformatted, set the LVM flag</li>\n</ol>\n<p>For more information on partitioning have a look at the Arch Linux wiki. If you don’t want to use <code class="language-text">gparted</code> you can just boot the Arch Linux Iso and use <code class="language-text">parted</code> or <code class="language-text">fdisk</code>. </p>\n<p>It’s also possible to use GPT instead of MBR you will need a third partition with about 2MB, but I won’t describe this here – just come back when you figured it out. Using a UEFI setup you also have to search for an other source of information ;)</p>\n<h2 id="boot-arch-linux-iso-from-usb-stick"><a href="#boot-arch-linux-iso-from-usb-stick" aria-hidden="true"><span class="icon icon-link"></span></a>Boot Arch Linux Iso from usb-stick</h2>\n<p>Search for your keyboard layout and activate it:</p>\n<pre class="language-text">loadkeys de-latin1-nodeadkeys.map.gz</pre>\n<p>Establish WiFi-connection if you don’t have wired access to the Internet:</p>\n<pre class="language-text">wifi-menu</pre>\n<h2 id="encrypt-partition-configure-lvm"><a href="#encrypt-partition-configure-lvm" aria-hidden="true"><span class="icon icon-link"></span></a>Encrypt partition, configure LVM</h2>\n<p>Load the kernel module for encryption:</p>\n<pre class="language-text">modprobe dm-crypt</pre>\n<p>Encrypt the big partition (sda2) with AES, 256 bit keylength (XTS splits the keylength). Have fun with the man and faq.</p>\n<pre class="language-text">cryptsetup -c aes-xts-plain64 -y -s 512 luksFormat /dev/sda2</pre>\n<p>And open it, so it will be in <code class="language-text">/dev/mapper/lvm</code>:</p>\n<pre class="language-text">cryptsetup luksOpen /dev/sda2 lvm</pre>\n<p>Create a physical volume, volume group, logical volumes (details):</p>\n<pre class="language-text">pvcreate /dev/mapper/lvm\nvgcreate main /dev/mapper/lvm\nlvcreate -L 20GB -n root main\nlvcreate -L 8GB -n swap main\nlvcreate -l 100%FREE -n home main</pre>\n<p>Now we need a filesystem on them:</p>\n<pre class="language-text">mkswap /dev/mapper/main-swap\nmkfs.ext4 /dev/mapper/main-root\nmkfs.ext4 /dev/mapper/main-home</pre>\n<h2 id="step-4-mount-volumes-install-arch-linux"><a href="#step-4-mount-volumes-install-arch-linux" aria-hidden="true"><span class="icon icon-link"></span></a>Step 4: Mount volumes, install Arch Linux</h2>\n<p>Mount the volumes into the running livesystem:</p>\n<pre class="language-text">mount /dev/mapper/main-root /mnt\nmkdir /mnt/boot\nmount /dev/sda1 /mnt/boot\nmkdir /mnt/home\nmount /dev/mapper/main-home /mnt/home</pre>\n<p>Install the base and base-devel packets to <code class="language-text">/mnt</code> (Internet-connection required):</p>\n<pre class="language-text">pacstrap /mnt base base-devel</pre>\n<p>Install GRUB2 to /mnt (part 1):</p>\n<pre class="language-text">pacstrap /mnt grub-bios</pre>\n<p>Generate fstab:</p>\n<pre class="language-text">genfstab -p -U /mnt &gt; /mnt/etc/fstab</pre>\n<h2 id="chroot-and-configure-the-system"><a href="#chroot-and-configure-the-system" aria-hidden="true"><span class="icon icon-link"></span></a>chroot and configure the system</h2>\n<p>Enter the chroot:</p>\n<pre class="language-text">arch-chroot /mnt</pre>\n<p>delete the <code class="language-text">#</code> in front of your language of choice (e.g. <code class="language-text">de_DE.UTF-8 UTF-8</code>) in locale.gen and generate the locale:</p>\n<pre class="language-text">vi /etc/locale.gen\nlocale-gen\necho LANG=de_DE.UTF-8 &gt; /etc/locale.conf\nexport LANG=de_DE.UTF-8</pre>\n<p>Generate /etc/vconsole.conf with the following 3 lines to bind your keys correctly:</p>\n<pre class="language-text">KEYMAP=&quot;de-latin1-nodeadkeys&quot;\nFONT=Lat2-Terminus16\nFONT_MAP=</pre>\n<p>Create a symbolic link /etc/localtime to your zone file <code class="language-text">/usr/share/zoneinfo/&lt;Zone&gt;/&lt;SubZone&gt;</code>:</p>\n<pre class="language-text">ln -s /usr/share/zoneinfo/Europe/Berlin /etc/localtime</pre>\n<p>Define your hostename:</p>\n<pre class="language-text">echo archserv &gt; /etc/hostname\nsystemctl enable lvm.service</pre>\n<p>Edit /etc/mkinitcpio.conf: Put <code class="language-text">keymap</code>, <code class="language-text">encrypt</code> and <code class="language-text">lvm2</code> (in that order!) before <code class="language-text">filesystems</code> in the HOOKS array.</p>\n<p>Regenerate the ramdisk:</p>\n<pre class="language-text">mkinitcpio -p linux</pre>\n<p>Now install GRUB (part 2), on a device not a partition or a volume:</p>\n<pre class="language-text">grub-install /dev/sda</pre>\n<p>In /etc/default/grub edit the line <code class="language-text">GRUB_CMDLINE_LINUX=&quot;&quot;</code> to <code class="language-text">GRUB_CMDLINE_LINUX=”cryptdevice=/dev/sda2:main&quot;</code> then run:</p>\n<pre class="language-text">grub-mkconfig -o /boot/grub/grub.cfg</pre>\n<p>set your root password:</p>\n<pre class="language-text">passwd</pre>\n<p>Exit the chroot:</p>\n<pre class="language-text">exit</pre>\n<p>Unmount:</p>\n<pre class="language-text">umount /mnt/boot\numount /mnt/home\numount/mnt</pre>\n<p>Reboot into your new system.</p>\n<h2 id="postscript"><a href="#postscript" aria-hidden="true"><span class="icon icon-link"></span></a>Postscript</h2>\n<p>If you want to open your LVM from within an other (live-)system these commands can come in handy:</p>\n<pre class="language-text">cryptsetup luksOpen /dev/sd??\nsudo pvscan\nsudo vgscan\nsudo lvscan\nsudo vgchange -a y</pre>\n',coverImage:null}}}}}]);